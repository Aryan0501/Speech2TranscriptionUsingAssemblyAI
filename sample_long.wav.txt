So in today's lecture, we are going to be discussing the benefits of neural networks, how to build a neural network. Tired of sitting through that tedious meeting replay? Are you bored of listening to dull lectures or you need long file transcription? In today's video, we're going to be taking a look at how you can transcribe long and large files and output them to text so you can get exactly what you need out of them and not waste a minute more. Let's take a deeper look as to what we're going to be going through today. So in today's video, we're going to be covering how to set up the Watson feature tech service. So this is a service that's going to allow us to transcribe videos. We're then going to take a look at how we can compress large files and split them out into MP3 so that we can work with them more easily. And last but not least, we're going to transcribe all that video using Watson speech text and output it to a text file so that you can take it away and work with it. So in terms of how we're going to be doing it, we're mainly going to be working with Python, and specifically, we're going to be using Jupiter notebooks to do this. We're then going to split out our main file, which is going to be called audio. Wav. So we're going to have the audio already. We're going to split this up using FFmpeg. So that means we're going to have a number of files, and then we're going to push this out into a text file so that you can take that text file away and do whatever you want with it. Ready to do it? Let's get to it. All right, guys. So in this video, we're going to be transcribing large files. Now, in this case, we've already got a large file, and it's just an audio extract from one of my previous videos. If we take a look, we can see that it's about 20 minutes long. We've got some music, we've also got some audio in there. We use the def statement. We then pass through what we want our function name to be. So in this case, we'll call it cool. Now, in most use cases, having a large file is going to be pretty tricky to transcribe. So in this case, what we're going to be able to do is chunk it out into smaller audio files, compress them, and then transcribe and then recompile them all together. Let's take a look as to what we're actually going to be going through in this video. So in this video, we're going to focus on our four key things. So first up, we're going to install and import our dependencies. Then we're going to set up a speech to text service through the Watson speechtotech service. We're then going to compress and split our audio into manageable chunks. And then last but not least we're going to perform our conversion and recompile it back into a single text file that we can go in ahead and use. So without further Ado let's kick this off and install and import our dependencies. Now there's one key dependency here and that's IBM Watson and you're also going to need FFmpeg installed as well. But I'll link in the description for how to install that. So let's go ahead and install our first dependency so that's our dependency installed. Now in order to run that command we basically use an exclamation Mark then Typed in Pip install IBM underscore Watson and again all of the code included in this video is going to be available in a GitHub repository. Just check the description below, it's all going to be there for you to pick up and run with so we can minimize that now and then import our dependency. So let's just delete that cell there. So let's go ahead and import these dependencies. So specifically we're going to need the speech to text service from IBM Watson and we're also going to need the I am Authenticator to go and authenticate against that service. So we've now gone and imported our two key dependencies. So the first one that we've imported is the speech to text class and what we've done in order to import that is just use a regular from an important statement from Python. So we've gone and written from IBM Watson import speech to text and then the second piece that we've written is from IBM cloud SDK core authenticators import IAM Authenticator so our speech to text service is going to allow us to transcribe our audio into text and our Im Authenticator is going to allow us to authenticate. So now the next thing that we need to do is go on and set up our speech to tech service. So whenever you're working with your speech to tech service you're going to need two key things. You're going to need an API key and a URL. So an API key. Think of it as a key to be able to use your service. Your URL is basically the door that you need to put that API key into. So let's go on ahead and grab those and start setting them up. So it's in order to set up our speech tech service we just need to go to club.